{"version":3,"sources":["components/Nav.js","components/Meme.js","components/MemeImage.js","components/ImageGallery.js","components/MemeForm.js","pages/MemeCreation.js","pages/MemeList.js","App.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Meme","props","style","position","color","textShadow","fontSize","fontWeight","textAlign","width","state","line1Text","bottom","line2Text","currentImage","src","file","alt","name","MemeImage","image","onClick","setState","ImageGallery","height","overflowY","memes","map","i","key","MemeForm","handleInputChange","event","target","value","htmlFor","onChange","MemeCreation","useState","currentImages","JSON","parse","localStorage","getItem","date","Date","push","setItem","stringify","MemeList","setMemes","useEffect","meme","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ea72ded.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\n\r\nexport default function Nav() {\r\n  // react fragment '<></>' works like a placeholder div\r\n  return (\r\n    <>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n        <a className='navbar-brand' href='#'>\r\n          MemeGenerator\r\n        </a>\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-toggle='collapse'\r\n          data-target='#navbarNavAltMarkup'\r\n          aria-controls='navbarNavAltMarkup'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'\r\n        >\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n        <div className='collapse navbar-collapse' id='navbarNavAltMarkup'>\r\n          <div className='navbar-nav ml-auto'>\r\n            <a className='nav-item nav-link active' href='/'>\r\n              Create <span className='sr-only'>(current)</span>\r\n            </a>\r\n            <a className='nav-item nav-link' href='my-memes'>\r\n              My Memes\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Meme(props) {\r\n  // react fragment '<></>' works like a placeholder div\r\n  const imageStyle = {\r\n    width: '100%',\r\n  };\r\n\r\n  const line1TextStyle = {\r\n    position: 'absolute',\r\n    color: '#FFFFFF',\r\n    textShadow: '0px 0px 10px #000000',\r\n    fontSize: '45px',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n  };\r\n\r\n  const line2TextStyle = {\r\n    position: 'absolute',\r\n    bottom: '0px',\r\n    color: '#FFFFFF',\r\n    textShadow: '0px 0px 10px #000000',\r\n    fontSize: '45px',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n  };\r\n\r\n  const memeContainerStyle = {\r\n    position: 'relative',\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={memeContainerStyle}>\r\n        <div style={line1TextStyle}>{props.state.line1Text}</div>\r\n        <div style={line2TextStyle}>{props.state.line2Text}</div>\r\n        {props.state.currentImage ? (\r\n          <img\r\n            style={imageStyle}\r\n            src={`/images/${props.state.currentImage.file}`}\r\n            alt={props.state.currentImage.name}\r\n          />\r\n        ) : (\r\n          <p>\r\n            <strong>select an image to get started!</strong>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function MemeImage(props) {\r\n  // react fragment '<></>' works like a placeholder div\r\n  const imageStyle = {\r\n    width: '100%',\r\n  };\r\n  const setImage = () => {\r\n    props.setState({\r\n      ...props.state,\r\n      //   maintains current state\r\n      currentImage: props.image,\r\n      //   setting new values we want to change\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <img\r\n        style={imageStyle}\r\n        src={`${props.image.file}`}\r\n        alt={`${props.image.name}`}\r\n        onClick={setImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport memes from '../data/memes.json';\r\nimport MemeImage from './MemeImage';\r\n\r\nexport default function ImageGallery(props) {\r\n  // react fragment '<></>' works like a placeholder div\r\n\r\n  //   this needs to display images from json data\r\n  // render a <MemeImage/> component for each image\r\n  // need an event for when the user selects and image, to update the state\r\n  //   useEffect(() => {\r\n  // called when the component loads\r\n  // axios.get('/api/memeimages/').then((res) => {\r\n  //     setImages(res.data)\r\n  // });\r\n  // ^ example for calling an api to get data after component state mounts\r\n  //   });\r\n\r\n  const listStyle = {\r\n    height: '100vh',\r\n    overflowY: 'scroll',\r\n  };\r\n  return (\r\n    <>\r\n      <ul style={listStyle} className='list-group'>\r\n        {memes.map((image, i) => (\r\n          <MemeImage\r\n            state={props.state}\r\n            setState={props.setState}\r\n            image={image}\r\n            key={i}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function MemeForm(props) {\r\n  // react fragment '<></>' works like a placeholder div\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    props.setState({\r\n      ...props.state,\r\n      [name]: value,\r\n    });\r\n  };\r\n  return (\r\n    <form>\r\n      <div className='form-group'>\r\n        <label htmlFor='line1'> Top : </label>\r\n        <input\r\n          type='text'\r\n          value={props.state.line1Text}\r\n          className='form-group'\r\n          name='line1Text'\r\n          id='line1'\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label htmlFor='line2'> Bottom : </label>\r\n        <input\r\n          type='text'\r\n          value={props.state.line2Text}\r\n          className='form-group'\r\n          name='line2Text'\r\n          id='line2'\r\n          onChange={handleInputChange}\r\n        ></input>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Meme from '../components/Meme';\r\nimport ImageGallery from '../components/ImageGallery';\r\nimport MemeForm from '../components/MemeForm';\r\n\r\nexport default function MemeCreation() {\r\n  const [state, setState] = useState({\r\n    currentImage: null,\r\n    line1Text: '',\r\n    line2Text: '',\r\n  });\r\n\r\n  const saveMeme = () => {\r\n    const currentImages = JSON.parse(localStorage.getItem('images')) || [];\r\n    const image = {\r\n      ...state,\r\n      date: new Date(),\r\n    };\r\n    currentImages.push(image);\r\n    localStorage.setItem('images', JSON.stringify(currentImages));\r\n    setState({\r\n      currentImage: null,\r\n      line1Text: '',\r\n      line2Text: '',\r\n    });\r\n  };\r\n\r\n  // react fragment '<></>' works like a placeholder div\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col-8'>\r\n          <Meme state={state} />\r\n          {state.currentImage && <MemeForm state={state} setState={setState} />}\r\n        </div>\r\n        <div className='col-4'>\r\n          <div className='btn btn-primary my-2 ml-auto' onClick={saveMeme}>\r\n            Save\r\n          </div>\r\n          <ImageGallery state={state} setState={setState} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Meme from '../components/Meme';\r\n\r\nexport default function MemeList() {\r\n  const [memes, setMemes] = useState([]);\r\n  useEffect(() => {\r\n    const currentImages = JSON.parse(localStorage.getItem('images')) || [];\r\n    setMemes(currentImages);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        {memes.map((meme) => (\r\n          <div className='col-4'>\r\n            <Meme state={meme} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport MemeCreation from './pages/MemeCreation';\nimport MemeList from './pages/MemeList';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Nav />\n      <Router>\n        <Route exact path='/'>\n          <MemeCreation />\n        </Route>\n        <Route exact path='/my-memes'>\n          <MemeList />\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}